{"name":"vBucket","tagline":"A minimalistic REST API for your files","body":"## What is vBucket?\r\nvBucket is a minimalistic API for your files.\r\n\r\nIt's goal is to provide you with REST access to a directory on your linux filesystem.\r\n\r\nYou can GET, POST, PUT and DELETE with simple curl commands.\r\n```\r\n# POST a file\r\ncurl -i -F file=@funny_cat.gif http://vbucket.example.com/\r\n\r\n# GET the file\r\ncurl http://vbucket.example.com/funny_cat.gif\r\n\r\n# DELETE the file\r\ncurl -X DELETE http://vbucket.example.com/funny_cat.gif\r\n\r\n# PUT a file\r\ncurl --upload-file another_cat.gif http://vbucket.example.com/a_specific_cat_file_name.gif\r\n```\r\n\r\n## vBucket vs.\r\n#### object storage\r\nObject storage stores data as objects with metadata, identified by a uuid. An API is employed to access the objects.\r\n\r\nvBucket is a REST API for a block storage filesystem. It has all the power of an object storage API without\r\nthe need for the underlying object storage hardware.\r\n\r\n#### webdav\r\nWebDAV(Web Distributed Authoring and Versioning) is a unique protocol with many features for reading and writing documents.\r\n\r\nvBucket uses HTTP for all it's communication, providing maximum accessibility to any language or system. POST, PUT, GET, and DELETE are the only methods you need to know.\r\n\r\n#### nfs\r\nNFS(Network File System) is a distributed, open filesystem protocol that you would mount and treat like a local disk.\r\nIt is extremely valuable if you need complete control over the files and their heirarchy.\r\n\r\nvBucket runs over HTTP, so there is no mounting or special ports to open. It works through firewalls, proxies, and NAT.\r\n\r\n#### iscsi\r\niSCSI(Internet Small Computer System Interface) is an IP protocol for sending SCSI commands over the network. You can do everything from mount a disk to boot from iSCSI. It is an extremely powerful storage bus.\r\n\r\nvBucket is very lightweight and easy to install. The only requirements to get started are Linux and Ruby.\r\n\r\n## Security\r\nBYO! vBucket does not come with an encryption or authentication mechanism. If you plan on running vBucket over the Internet, its very simple to host behind Apache or Nginx. These web servers can provide basic authentication, SSL, reverse proxy.\r\n\r\nFor detailed instructions on how to set up SSL and authentication, refer to the wiki.\r\n\r\n## Applying vBucket to your operations\r\n#### File Server\r\nAt it's core, vBucket is designed to serve up files. If you want to host files that are accessible via REST API, you can simply run vBucket as a service and point it at a directory on your linux system. You can upload and download files over HTTP with a multitude of languages, libraries and tools.\r\n\r\n#### YUM/APT Repo\r\nvBucket can serve as a repo for linux packages. GET requests from `yum` or `apt-get` to the API are easy for vBucket.\r\n\r\nYou can also publish new packages to your repo by doing a POST or PUT. vBucket can be configured with a `post_upload` script to run repo indexing commands after an upload has completed.\r\n\r\n#### Gem Server\r\nIn addition to Linux repos, you can also serve gems from vBucket. Simply use the `post_upload` in the configuration to perform a `gem generate_index` on your vBucket directory.\r\n\r\n#### Container Repo\r\nThere is a lot of movement in this area right now and containers are all the rage. As container repos become more standardized, it should be possible to host containers much like RPMs in a yum server. Upload your container and any metadata, and rebuild the index with a `post_upload` script.\r\n\r\n#### Vagrant Box Repo\r\nHate storing your base Vagrant boxes in Dropbox? I do. vBucket is a great way to keep them organized and accessible.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}